local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Ultimate Basketball",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Loading in",
   LoadingSubtitle = "by zyn.828383",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "zyn.828383.hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Main", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Autos")

Rayfield:Notify({
   Title = "You Excuted zyn.828383 script",
   Content = "DOUBLE CHUNK COOKIE?",
   Duration = 4,
   Image = nil,
})

local Button = MainTab:CreateButton({
   Name = "Auto Green",
   Callback = function()
     while true do
local args = {
    [1] = false,
    [2] = -100
}

game:GetService("ReplicatedStorage").Events.Shoot:FireServer(unpack(args))
wait()
end
   end,
})

local Button = MainTab:CreateButton({
   Name = "Auto dunk",
   Callback = function()
     while wait do
game:GetService("ReplicatedStorage").Events.Dunk:FireServer()
wait()
end
   end,
})

local SpeedTab = Window:CreateTab("Toggle speed", nil) -- Title, Image
local SpeedSection = SpeedTab:CreateSection("Toggle speed")

local Slider = SpeedTab:CreateSlider({
   Name = "Walkspeed",
   Range = {0, 100},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})
